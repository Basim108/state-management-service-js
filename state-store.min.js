function t(n){return n?typeof n=="string"?!n.trim():!n.length:!0}function i(n){console.error(n.message,n.context)}function e(r){if(!t(r)){let e=u,f,o=r.length;for(f=0;f<o;f++){let t=r[f];if(e=e[t],e===undefined)return i({message:n.consolePrefix+n.errors.objectNotFound,context:{name:t,i:f,namespace:r}})}return e}}function r(r){if(!r)return console.error(n.consolePrefix+n.errors.keyIsEmpty),null;if(typeof r!="string")return console.error(n.consolePrefix+n.errors.keyIsNotString),null;let f=r.split(n.namespace.separator),u,e=f.length;for(u=0;u<e;u++){if(t(f[u]))return i({message:n.consolePrefix+n.errors.keyContainsDoubleSeparator,context:{name:name,i:u,namespace:namespace}}),null;if(!isNaN(parseInt(f[u])))return i({message:n.consolePrefix+n.errors.keyIsNotString,context:{name:name,i:u}}),null}return f}class f{register(n,i){let f=r(n);if(!t(f)){let e=u,o,s=f.length-1;if(f.length>1)for(o=0;o<s;o++){let n=f[o];e[n]===undefined&&(e[n]=[]);e=e[n]}return e[f[s]]=i,i}}resolve(u){let f=r(u);if(!t(f)){let o=e(f);return o===undefined?i({message:n.consolePrefix+n.errors.objectNotFound,context:{key:u,namespace:f,registeredValue:o}}):o}}}let u={},n={consolePrefix:"healbe.ioc: ",namespace:{separator:"."},errors:{objectNotFound:"Object not found.",registerCanceled:"Registration value in IOC failed",keyIsEmpty:"Ключ по которому регистрируется/резолвиться объект пустой.",keyIsNotString:"Неверный тип ключа по которому регистрируется/резолвиться объект.",keyContainsDoubleSeparator:"Неверный ключ по которому регистрируется/резолвиться объект. Содержит два разделителя подряд."}};const o=new f;export default o;